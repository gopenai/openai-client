// Code generated by ogen, DO NOT EDIT.

package openaiclient

import (
	"github.com/go-faster/errors"
	"github.com/go-faster/jx"

	ht "github.com/ogen-go/ogen/http"
)

// Ref: #/components/schemas/ChatCompletionRequestMessage
type ChatCompletionRequestMessage struct {
	// The role of the author of this message.
	Role ChatCompletionRequestMessageRole `json:"role"`
	// The contents of the message.
	Content string `json:"content"`
	// The name of the user in a multi-user chat.
	Name OptString `json:"name"`
}

// GetRole returns the value of Role.
func (s *ChatCompletionRequestMessage) GetRole() ChatCompletionRequestMessageRole {
	return s.Role
}

// GetContent returns the value of Content.
func (s *ChatCompletionRequestMessage) GetContent() string {
	return s.Content
}

// GetName returns the value of Name.
func (s *ChatCompletionRequestMessage) GetName() OptString {
	return s.Name
}

// SetRole sets the value of Role.
func (s *ChatCompletionRequestMessage) SetRole(val ChatCompletionRequestMessageRole) {
	s.Role = val
}

// SetContent sets the value of Content.
func (s *ChatCompletionRequestMessage) SetContent(val string) {
	s.Content = val
}

// SetName sets the value of Name.
func (s *ChatCompletionRequestMessage) SetName(val OptString) {
	s.Name = val
}

// The role of the author of this message.
type ChatCompletionRequestMessageRole string

const (
	ChatCompletionRequestMessageRoleSystem    ChatCompletionRequestMessageRole = "system"
	ChatCompletionRequestMessageRoleUser      ChatCompletionRequestMessageRole = "user"
	ChatCompletionRequestMessageRoleAssistant ChatCompletionRequestMessageRole = "assistant"
)

// MarshalText implements encoding.TextMarshaler.
func (s ChatCompletionRequestMessageRole) MarshalText() ([]byte, error) {
	switch s {
	case ChatCompletionRequestMessageRoleSystem:
		return []byte(s), nil
	case ChatCompletionRequestMessageRoleUser:
		return []byte(s), nil
	case ChatCompletionRequestMessageRoleAssistant:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChatCompletionRequestMessageRole) UnmarshalText(data []byte) error {
	switch ChatCompletionRequestMessageRole(data) {
	case ChatCompletionRequestMessageRoleSystem:
		*s = ChatCompletionRequestMessageRoleSystem
		return nil
	case ChatCompletionRequestMessageRoleUser:
		*s = ChatCompletionRequestMessageRoleUser
		return nil
	case ChatCompletionRequestMessageRoleAssistant:
		*s = ChatCompletionRequestMessageRoleAssistant
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ChatCompletionResponseMessage
type ChatCompletionResponseMessage struct {
	// The role of the author of this message.
	Role ChatCompletionResponseMessageRole `json:"role"`
	// The contents of the message.
	Content string `json:"content"`
}

// GetRole returns the value of Role.
func (s *ChatCompletionResponseMessage) GetRole() ChatCompletionResponseMessageRole {
	return s.Role
}

// GetContent returns the value of Content.
func (s *ChatCompletionResponseMessage) GetContent() string {
	return s.Content
}

// SetRole sets the value of Role.
func (s *ChatCompletionResponseMessage) SetRole(val ChatCompletionResponseMessageRole) {
	s.Role = val
}

// SetContent sets the value of Content.
func (s *ChatCompletionResponseMessage) SetContent(val string) {
	s.Content = val
}

// The role of the author of this message.
type ChatCompletionResponseMessageRole string

const (
	ChatCompletionResponseMessageRoleSystem    ChatCompletionResponseMessageRole = "system"
	ChatCompletionResponseMessageRoleUser      ChatCompletionResponseMessageRole = "user"
	ChatCompletionResponseMessageRoleAssistant ChatCompletionResponseMessageRole = "assistant"
)

// MarshalText implements encoding.TextMarshaler.
func (s ChatCompletionResponseMessageRole) MarshalText() ([]byte, error) {
	switch s {
	case ChatCompletionResponseMessageRoleSystem:
		return []byte(s), nil
	case ChatCompletionResponseMessageRoleUser:
		return []byte(s), nil
	case ChatCompletionResponseMessageRoleAssistant:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ChatCompletionResponseMessageRole) UnmarshalText(data []byte) error {
	switch ChatCompletionResponseMessageRole(data) {
	case ChatCompletionResponseMessageRoleSystem:
		*s = ChatCompletionResponseMessageRoleSystem
		return nil
	case ChatCompletionResponseMessageRoleUser:
		*s = ChatCompletionResponseMessageRoleUser
		return nil
	case ChatCompletionResponseMessageRoleAssistant:
		*s = ChatCompletionResponseMessageRoleAssistant
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateChatCompletionRequest
type CreateChatCompletionRequest struct {
	// ID of the model to use. Currently, only `gpt-3.5-turbo` and `gpt-3.5-turbo-0301` are supported.
	Model string `json:"model"`
	// The messages to generate chat completions for, in the [chat
	// format](/docs/guides/chat/introduction).
	Messages []ChatCompletionRequestMessage `json:"messages"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	// We generally recommend altering this or `top_p` but not both.
	Temperature OptNilFloat64 `json:"temperature"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers
	// the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the
	// top 10% probability mass are considered.
	// We generally recommend altering this or `temperature` but not both.
	TopP OptNilFloat64 `json:"top_p"`
	// How many chat completion choices to generate for each input message.
	N OptNilInt `json:"n"`
	// If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only
	// [server-sent events](https://developer.mozilla.
	// org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they
	// become available, with the stream terminated by a `data: [DONE]` message.
	Stream OptNilBool `json:"stream"`
	// Up to 4 sequences where the API will stop generating further tokens.
	Stop OptCreateChatCompletionRequestStop `json:"stop"`
	// The maximum number of tokens allowed for the generated answer. By default, the number of tokens
	// the model can return will be (4096 - prompt tokens).
	MaxTokens OptInt `json:"max_tokens"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in
	// the text so far, increasing the model's likelihood to talk about new topics.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	PresencePenalty OptNilFloat64 `json:"presence_penalty"`
	// Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency
	// in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
	// [See more information about frequency and presence penalties.
	// ](/docs/api-reference/parameter-details).
	FrequencyPenalty OptNilFloat64 `json:"frequency_penalty"`
	// Modify the likelihood of specified tokens appearing in the completion.
	// Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an
	// associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated
	// by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1
	// should decrease or increase likelihood of selection; values like -100 or 100 should result in a
	// ban or exclusive selection of the relevant token.
	LogitBias OptCreateChatCompletionRequestLogitBias `json:"logit_bias"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetModel returns the value of Model.
func (s *CreateChatCompletionRequest) GetModel() string {
	return s.Model
}

// GetMessages returns the value of Messages.
func (s *CreateChatCompletionRequest) GetMessages() []ChatCompletionRequestMessage {
	return s.Messages
}

// GetTemperature returns the value of Temperature.
func (s *CreateChatCompletionRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetTopP returns the value of TopP.
func (s *CreateChatCompletionRequest) GetTopP() OptNilFloat64 {
	return s.TopP
}

// GetN returns the value of N.
func (s *CreateChatCompletionRequest) GetN() OptNilInt {
	return s.N
}

// GetStream returns the value of Stream.
func (s *CreateChatCompletionRequest) GetStream() OptNilBool {
	return s.Stream
}

// GetStop returns the value of Stop.
func (s *CreateChatCompletionRequest) GetStop() OptCreateChatCompletionRequestStop {
	return s.Stop
}

// GetMaxTokens returns the value of MaxTokens.
func (s *CreateChatCompletionRequest) GetMaxTokens() OptInt {
	return s.MaxTokens
}

// GetPresencePenalty returns the value of PresencePenalty.
func (s *CreateChatCompletionRequest) GetPresencePenalty() OptNilFloat64 {
	return s.PresencePenalty
}

// GetFrequencyPenalty returns the value of FrequencyPenalty.
func (s *CreateChatCompletionRequest) GetFrequencyPenalty() OptNilFloat64 {
	return s.FrequencyPenalty
}

// GetLogitBias returns the value of LogitBias.
func (s *CreateChatCompletionRequest) GetLogitBias() OptCreateChatCompletionRequestLogitBias {
	return s.LogitBias
}

// GetUser returns the value of User.
func (s *CreateChatCompletionRequest) GetUser() OptString {
	return s.User
}

// SetModel sets the value of Model.
func (s *CreateChatCompletionRequest) SetModel(val string) {
	s.Model = val
}

// SetMessages sets the value of Messages.
func (s *CreateChatCompletionRequest) SetMessages(val []ChatCompletionRequestMessage) {
	s.Messages = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateChatCompletionRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetTopP sets the value of TopP.
func (s *CreateChatCompletionRequest) SetTopP(val OptNilFloat64) {
	s.TopP = val
}

// SetN sets the value of N.
func (s *CreateChatCompletionRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetStream sets the value of Stream.
func (s *CreateChatCompletionRequest) SetStream(val OptNilBool) {
	s.Stream = val
}

// SetStop sets the value of Stop.
func (s *CreateChatCompletionRequest) SetStop(val OptCreateChatCompletionRequestStop) {
	s.Stop = val
}

// SetMaxTokens sets the value of MaxTokens.
func (s *CreateChatCompletionRequest) SetMaxTokens(val OptInt) {
	s.MaxTokens = val
}

// SetPresencePenalty sets the value of PresencePenalty.
func (s *CreateChatCompletionRequest) SetPresencePenalty(val OptNilFloat64) {
	s.PresencePenalty = val
}

// SetFrequencyPenalty sets the value of FrequencyPenalty.
func (s *CreateChatCompletionRequest) SetFrequencyPenalty(val OptNilFloat64) {
	s.FrequencyPenalty = val
}

// SetLogitBias sets the value of LogitBias.
func (s *CreateChatCompletionRequest) SetLogitBias(val OptCreateChatCompletionRequestLogitBias) {
	s.LogitBias = val
}

// SetUser sets the value of User.
func (s *CreateChatCompletionRequest) SetUser(val OptString) {
	s.User = val
}

// Modify the likelihood of specified tokens appearing in the completion.
// Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an
// associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated
// by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1
// should decrease or increase likelihood of selection; values like -100 or 100 should result in a
// ban or exclusive selection of the relevant token.
type CreateChatCompletionRequestLogitBias struct{}

// Up to 4 sequences where the API will stop generating further tokens.
// CreateChatCompletionRequestStop represents sum type.
type CreateChatCompletionRequestStop struct {
	Type        CreateChatCompletionRequestStopType // switch on this field
	Null        struct{}
	String      string
	StringArray []string
}

// CreateChatCompletionRequestStopType is oneOf type of CreateChatCompletionRequestStop.
type CreateChatCompletionRequestStopType string

// Possible values for CreateChatCompletionRequestStopType.
const (
	NullCreateChatCompletionRequestStop        CreateChatCompletionRequestStopType = "struct{}"
	StringCreateChatCompletionRequestStop      CreateChatCompletionRequestStopType = "string"
	StringArrayCreateChatCompletionRequestStop CreateChatCompletionRequestStopType = "[]string"
)

// IsNull reports whether CreateChatCompletionRequestStop is struct{}.
func (s CreateChatCompletionRequestStop) IsNull() bool {
	return s.Type == NullCreateChatCompletionRequestStop
}

// IsString reports whether CreateChatCompletionRequestStop is string.
func (s CreateChatCompletionRequestStop) IsString() bool {
	return s.Type == StringCreateChatCompletionRequestStop
}

// IsStringArray reports whether CreateChatCompletionRequestStop is []string.
func (s CreateChatCompletionRequestStop) IsStringArray() bool {
	return s.Type == StringArrayCreateChatCompletionRequestStop
}

// SetNull sets CreateChatCompletionRequestStop to struct{}.
func (s *CreateChatCompletionRequestStop) SetNull(v struct{}) {
	s.Type = NullCreateChatCompletionRequestStop
	s.Null = v
}

// GetNull returns struct{} and true boolean if CreateChatCompletionRequestStop is struct{}.
func (s CreateChatCompletionRequestStop) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCreateChatCompletionRequestStop returns new CreateChatCompletionRequestStop from struct{}.
func NewNullCreateChatCompletionRequestStop(v struct{}) CreateChatCompletionRequestStop {
	var s CreateChatCompletionRequestStop
	s.SetNull(v)
	return s
}

// SetString sets CreateChatCompletionRequestStop to string.
func (s *CreateChatCompletionRequestStop) SetString(v string) {
	s.Type = StringCreateChatCompletionRequestStop
	s.String = v
}

// GetString returns string and true boolean if CreateChatCompletionRequestStop is string.
func (s CreateChatCompletionRequestStop) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateChatCompletionRequestStop returns new CreateChatCompletionRequestStop from string.
func NewStringCreateChatCompletionRequestStop(v string) CreateChatCompletionRequestStop {
	var s CreateChatCompletionRequestStop
	s.SetString(v)
	return s
}

// SetStringArray sets CreateChatCompletionRequestStop to []string.
func (s *CreateChatCompletionRequestStop) SetStringArray(v []string) {
	s.Type = StringArrayCreateChatCompletionRequestStop
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateChatCompletionRequestStop is []string.
func (s CreateChatCompletionRequestStop) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateChatCompletionRequestStop returns new CreateChatCompletionRequestStop from []string.
func NewStringArrayCreateChatCompletionRequestStop(v []string) CreateChatCompletionRequestStop {
	var s CreateChatCompletionRequestStop
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateChatCompletionResponse
type CreateChatCompletionResponse struct {
	ID      string                                    `json:"id"`
	Object  string                                    `json:"object"`
	Created int                                       `json:"created"`
	Model   string                                    `json:"model"`
	Choices []CreateChatCompletionResponseChoicesItem `json:"choices"`
	Usage   OptCreateChatCompletionResponseUsage      `json:"usage"`
}

// GetID returns the value of ID.
func (s *CreateChatCompletionResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *CreateChatCompletionResponse) GetObject() string {
	return s.Object
}

// GetCreated returns the value of Created.
func (s *CreateChatCompletionResponse) GetCreated() int {
	return s.Created
}

// GetModel returns the value of Model.
func (s *CreateChatCompletionResponse) GetModel() string {
	return s.Model
}

// GetChoices returns the value of Choices.
func (s *CreateChatCompletionResponse) GetChoices() []CreateChatCompletionResponseChoicesItem {
	return s.Choices
}

// GetUsage returns the value of Usage.
func (s *CreateChatCompletionResponse) GetUsage() OptCreateChatCompletionResponseUsage {
	return s.Usage
}

// SetID sets the value of ID.
func (s *CreateChatCompletionResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *CreateChatCompletionResponse) SetObject(val string) {
	s.Object = val
}

// SetCreated sets the value of Created.
func (s *CreateChatCompletionResponse) SetCreated(val int) {
	s.Created = val
}

// SetModel sets the value of Model.
func (s *CreateChatCompletionResponse) SetModel(val string) {
	s.Model = val
}

// SetChoices sets the value of Choices.
func (s *CreateChatCompletionResponse) SetChoices(val []CreateChatCompletionResponseChoicesItem) {
	s.Choices = val
}

// SetUsage sets the value of Usage.
func (s *CreateChatCompletionResponse) SetUsage(val OptCreateChatCompletionResponseUsage) {
	s.Usage = val
}

type CreateChatCompletionResponseChoicesItem struct {
	Index        OptInt                           `json:"index"`
	Message      OptChatCompletionResponseMessage `json:"message"`
	FinishReason OptString                        `json:"finish_reason"`
}

// GetIndex returns the value of Index.
func (s *CreateChatCompletionResponseChoicesItem) GetIndex() OptInt {
	return s.Index
}

// GetMessage returns the value of Message.
func (s *CreateChatCompletionResponseChoicesItem) GetMessage() OptChatCompletionResponseMessage {
	return s.Message
}

// GetFinishReason returns the value of FinishReason.
func (s *CreateChatCompletionResponseChoicesItem) GetFinishReason() OptString {
	return s.FinishReason
}

// SetIndex sets the value of Index.
func (s *CreateChatCompletionResponseChoicesItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetMessage sets the value of Message.
func (s *CreateChatCompletionResponseChoicesItem) SetMessage(val OptChatCompletionResponseMessage) {
	s.Message = val
}

// SetFinishReason sets the value of FinishReason.
func (s *CreateChatCompletionResponseChoicesItem) SetFinishReason(val OptString) {
	s.FinishReason = val
}

type CreateChatCompletionResponseUsage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateChatCompletionResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetCompletionTokens returns the value of CompletionTokens.
func (s *CreateChatCompletionResponseUsage) GetCompletionTokens() int {
	return s.CompletionTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateChatCompletionResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateChatCompletionResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetCompletionTokens sets the value of CompletionTokens.
func (s *CreateChatCompletionResponseUsage) SetCompletionTokens(val int) {
	s.CompletionTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateChatCompletionResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateEditRequest
type CreateEditRequest struct {
	// ID of the model to use. You can use the `text-davinci-edit-001` or `code-davinci-edit-001` model
	// with this endpoint.
	Model string `json:"model"`
	// The input text to use as a starting point for the edit.
	Input OptNilString `json:"input"`
	// The instruction that tells the model how to edit the prompt.
	Instruction string `json:"instruction"`
	// How many edits to generate for the input and instruction.
	N OptNilInt `json:"n"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output
	// more random, while lower values like 0.2 will make it more focused and deterministic.
	// We generally recommend altering this or `top_p` but not both.
	Temperature OptNilFloat64 `json:"temperature"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers
	// the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the
	// top 10% probability mass are considered.
	// We generally recommend altering this or `temperature` but not both.
	TopP OptNilFloat64 `json:"top_p"`
}

// GetModel returns the value of Model.
func (s *CreateEditRequest) GetModel() string {
	return s.Model
}

// GetInput returns the value of Input.
func (s *CreateEditRequest) GetInput() OptNilString {
	return s.Input
}

// GetInstruction returns the value of Instruction.
func (s *CreateEditRequest) GetInstruction() string {
	return s.Instruction
}

// GetN returns the value of N.
func (s *CreateEditRequest) GetN() OptNilInt {
	return s.N
}

// GetTemperature returns the value of Temperature.
func (s *CreateEditRequest) GetTemperature() OptNilFloat64 {
	return s.Temperature
}

// GetTopP returns the value of TopP.
func (s *CreateEditRequest) GetTopP() OptNilFloat64 {
	return s.TopP
}

// SetModel sets the value of Model.
func (s *CreateEditRequest) SetModel(val string) {
	s.Model = val
}

// SetInput sets the value of Input.
func (s *CreateEditRequest) SetInput(val OptNilString) {
	s.Input = val
}

// SetInstruction sets the value of Instruction.
func (s *CreateEditRequest) SetInstruction(val string) {
	s.Instruction = val
}

// SetN sets the value of N.
func (s *CreateEditRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetTemperature sets the value of Temperature.
func (s *CreateEditRequest) SetTemperature(val OptNilFloat64) {
	s.Temperature = val
}

// SetTopP sets the value of TopP.
func (s *CreateEditRequest) SetTopP(val OptNilFloat64) {
	s.TopP = val
}

// Ref: #/components/schemas/CreateEditResponse
type CreateEditResponse struct {
	Object  string                          `json:"object"`
	Created int                             `json:"created"`
	Choices []CreateEditResponseChoicesItem `json:"choices"`
	Usage   CreateEditResponseUsage         `json:"usage"`
}

// GetObject returns the value of Object.
func (s *CreateEditResponse) GetObject() string {
	return s.Object
}

// GetCreated returns the value of Created.
func (s *CreateEditResponse) GetCreated() int {
	return s.Created
}

// GetChoices returns the value of Choices.
func (s *CreateEditResponse) GetChoices() []CreateEditResponseChoicesItem {
	return s.Choices
}

// GetUsage returns the value of Usage.
func (s *CreateEditResponse) GetUsage() CreateEditResponseUsage {
	return s.Usage
}

// SetObject sets the value of Object.
func (s *CreateEditResponse) SetObject(val string) {
	s.Object = val
}

// SetCreated sets the value of Created.
func (s *CreateEditResponse) SetCreated(val int) {
	s.Created = val
}

// SetChoices sets the value of Choices.
func (s *CreateEditResponse) SetChoices(val []CreateEditResponseChoicesItem) {
	s.Choices = val
}

// SetUsage sets the value of Usage.
func (s *CreateEditResponse) SetUsage(val CreateEditResponseUsage) {
	s.Usage = val
}

type CreateEditResponseChoicesItem struct {
	Text         OptString                                   `json:"text"`
	Index        OptInt                                      `json:"index"`
	Logprobs     OptNilCreateEditResponseChoicesItemLogprobs `json:"logprobs"`
	FinishReason OptString                                   `json:"finish_reason"`
}

// GetText returns the value of Text.
func (s *CreateEditResponseChoicesItem) GetText() OptString {
	return s.Text
}

// GetIndex returns the value of Index.
func (s *CreateEditResponseChoicesItem) GetIndex() OptInt {
	return s.Index
}

// GetLogprobs returns the value of Logprobs.
func (s *CreateEditResponseChoicesItem) GetLogprobs() OptNilCreateEditResponseChoicesItemLogprobs {
	return s.Logprobs
}

// GetFinishReason returns the value of FinishReason.
func (s *CreateEditResponseChoicesItem) GetFinishReason() OptString {
	return s.FinishReason
}

// SetText sets the value of Text.
func (s *CreateEditResponseChoicesItem) SetText(val OptString) {
	s.Text = val
}

// SetIndex sets the value of Index.
func (s *CreateEditResponseChoicesItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetLogprobs sets the value of Logprobs.
func (s *CreateEditResponseChoicesItem) SetLogprobs(val OptNilCreateEditResponseChoicesItemLogprobs) {
	s.Logprobs = val
}

// SetFinishReason sets the value of FinishReason.
func (s *CreateEditResponseChoicesItem) SetFinishReason(val OptString) {
	s.FinishReason = val
}

type CreateEditResponseChoicesItemLogprobs struct {
	Tokens        []string                                               `json:"tokens"`
	TokenLogprobs []float64                                              `json:"token_logprobs"`
	TopLogprobs   []CreateEditResponseChoicesItemLogprobsTopLogprobsItem `json:"top_logprobs"`
	TextOffset    []int                                                  `json:"text_offset"`
}

// GetTokens returns the value of Tokens.
func (s *CreateEditResponseChoicesItemLogprobs) GetTokens() []string {
	return s.Tokens
}

// GetTokenLogprobs returns the value of TokenLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) GetTokenLogprobs() []float64 {
	return s.TokenLogprobs
}

// GetTopLogprobs returns the value of TopLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) GetTopLogprobs() []CreateEditResponseChoicesItemLogprobsTopLogprobsItem {
	return s.TopLogprobs
}

// GetTextOffset returns the value of TextOffset.
func (s *CreateEditResponseChoicesItemLogprobs) GetTextOffset() []int {
	return s.TextOffset
}

// SetTokens sets the value of Tokens.
func (s *CreateEditResponseChoicesItemLogprobs) SetTokens(val []string) {
	s.Tokens = val
}

// SetTokenLogprobs sets the value of TokenLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) SetTokenLogprobs(val []float64) {
	s.TokenLogprobs = val
}

// SetTopLogprobs sets the value of TopLogprobs.
func (s *CreateEditResponseChoicesItemLogprobs) SetTopLogprobs(val []CreateEditResponseChoicesItemLogprobsTopLogprobsItem) {
	s.TopLogprobs = val
}

// SetTextOffset sets the value of TextOffset.
func (s *CreateEditResponseChoicesItemLogprobs) SetTextOffset(val []int) {
	s.TextOffset = val
}

type CreateEditResponseChoicesItemLogprobsTopLogprobsItem struct{}

type CreateEditResponseUsage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GetPromptTokens returns the value of PromptTokens.
func (s *CreateEditResponseUsage) GetPromptTokens() int {
	return s.PromptTokens
}

// GetCompletionTokens returns the value of CompletionTokens.
func (s *CreateEditResponseUsage) GetCompletionTokens() int {
	return s.CompletionTokens
}

// GetTotalTokens returns the value of TotalTokens.
func (s *CreateEditResponseUsage) GetTotalTokens() int {
	return s.TotalTokens
}

// SetPromptTokens sets the value of PromptTokens.
func (s *CreateEditResponseUsage) SetPromptTokens(val int) {
	s.PromptTokens = val
}

// SetCompletionTokens sets the value of CompletionTokens.
func (s *CreateEditResponseUsage) SetCompletionTokens(val int) {
	s.CompletionTokens = val
}

// SetTotalTokens sets the value of TotalTokens.
func (s *CreateEditResponseUsage) SetTotalTokens(val int) {
	s.TotalTokens = val
}

// Ref: #/components/schemas/CreateFineTuneRequest
type CreateFineTuneRequest struct {
	// The ID of an uploaded file that contains training data.
	// See [upload file](/docs/api-reference/files/upload) for how to upload a file.
	// Your dataset must be formatted as a JSONL file, where each training
	// example is a JSON object with the keys "prompt" and "completion".
	// Additionally, you must upload your file with the purpose `fine-tune`.
	// See the [fine-tuning guide](/docs/guides/fine-tuning/creating-training-data) for more details.
	TrainingFile string `json:"training_file"`
	// The ID of an uploaded file that contains validation data.
	// If you provide this file, the data is used to generate validation
	// metrics periodically during fine-tuning. These metrics can be viewed in
	// the [fine-tuning results file](/docs/guides/fine-tuning/analyzing-your-fine-tuned-model).
	// Your train and validation data should be mutually exclusive.
	// Your dataset must be formatted as a JSONL file, where each validation
	// example is a JSON object with the keys "prompt" and "completion".
	// Additionally, you must upload your file with the purpose `fine-tune`.
	// See the [fine-tuning guide](/docs/guides/fine-tuning/creating-training-data) for more details.
	ValidationFile OptNilString `json:"validation_file"`
	// The name of the base model to fine-tune. You can select one of "ada",
	// "babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21.
	// To learn more about these models, see the
	// [Models](https://platform.openai.com/docs/models) documentation.
	Model OptNilString `json:"model"`
	// The number of epochs to train the model for. An epoch refers to one
	// full cycle through the training dataset.
	NEpochs OptNilInt `json:"n_epochs"`
	// The batch size to use for training. The batch size is the number of
	// training examples used to train a single forward and backward pass.
	// By default, the batch size will be dynamically configured to be
	// ~0.2% of the number of examples in the training set, capped at 256 -
	// in general, we've found that larger batch sizes tend to work better
	// for larger datasets.
	BatchSize OptNilInt `json:"batch_size"`
	// The learning rate multiplier to use for training.
	// The fine-tuning learning rate is the original learning rate used for
	// pretraining multiplied by this value.
	// By default, the learning rate multiplier is the 0.05, 0.1, or 0.2
	// depending on final `batch_size` (larger learning rates tend to
	// perform better with larger batch sizes). We recommend experimenting
	// with values in the range 0.02 to 0.2 to see what produces the best
	// results.
	LearningRateMultiplier OptNilFloat64 `json:"learning_rate_multiplier"`
	// The weight to use for loss on the prompt tokens. This controls how
	// much the model tries to learn to generate the prompt (as compared
	// to the completion which always has a weight of 1.0), and can add
	// a stabilizing effect to training when completions are short.
	// If prompts are extremely long (relative to completions), it may make
	// sense to reduce this weight so as to avoid over-prioritizing
	// learning the prompt.
	PromptLossWeight OptNilFloat64 `json:"prompt_loss_weight"`
	// If set, we calculate classification-specific metrics such as accuracy
	// and F-1 score using the validation set at the end of every epoch.
	// These metrics can be viewed in the [results
	// file](/docs/guides/fine-tuning/analyzing-your-fine-tuned-model).
	// In order to compute classification metrics, you must provide a
	// `validation_file`. Additionally, you must
	// specify `classification_n_classes` for multiclass classification or
	// `classification_positive_class` for binary classification.
	ComputeClassificationMetrics OptNilBool `json:"compute_classification_metrics"`
	// The number of classes in a classification task.
	// This parameter is required for multiclass classification.
	ClassificationNClasses OptNilInt `json:"classification_n_classes"`
	// The positive class in binary classification.
	// This parameter is needed to generate precision, recall, and F1
	// metrics when doing binary classification.
	ClassificationPositiveClass OptNilString `json:"classification_positive_class"`
	// If this is provided, we calculate F-beta scores at the specified
	// beta values. The F-beta score is a generalization of F-1 score.
	// This is only used for binary classification.
	// With a beta of 1 (i.e. the F-1 score), precision and recall are
	// given the same weight. A larger beta score puts more weight on
	// recall and less on precision. A smaller beta score puts more weight
	// on precision and less on recall.
	ClassificationBetas OptNilFloat64Array `json:"classification_betas"`
	// A string of up to 40 characters that will be added to your fine-tuned model name.
	// For example, a `suffix` of "custom-model-name" would produce a model name like
	// `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.
	Suffix OptNilString `json:"suffix"`
}

// GetTrainingFile returns the value of TrainingFile.
func (s *CreateFineTuneRequest) GetTrainingFile() string {
	return s.TrainingFile
}

// GetValidationFile returns the value of ValidationFile.
func (s *CreateFineTuneRequest) GetValidationFile() OptNilString {
	return s.ValidationFile
}

// GetModel returns the value of Model.
func (s *CreateFineTuneRequest) GetModel() OptNilString {
	return s.Model
}

// GetNEpochs returns the value of NEpochs.
func (s *CreateFineTuneRequest) GetNEpochs() OptNilInt {
	return s.NEpochs
}

// GetBatchSize returns the value of BatchSize.
func (s *CreateFineTuneRequest) GetBatchSize() OptNilInt {
	return s.BatchSize
}

// GetLearningRateMultiplier returns the value of LearningRateMultiplier.
func (s *CreateFineTuneRequest) GetLearningRateMultiplier() OptNilFloat64 {
	return s.LearningRateMultiplier
}

// GetPromptLossWeight returns the value of PromptLossWeight.
func (s *CreateFineTuneRequest) GetPromptLossWeight() OptNilFloat64 {
	return s.PromptLossWeight
}

// GetComputeClassificationMetrics returns the value of ComputeClassificationMetrics.
func (s *CreateFineTuneRequest) GetComputeClassificationMetrics() OptNilBool {
	return s.ComputeClassificationMetrics
}

// GetClassificationNClasses returns the value of ClassificationNClasses.
func (s *CreateFineTuneRequest) GetClassificationNClasses() OptNilInt {
	return s.ClassificationNClasses
}

// GetClassificationPositiveClass returns the value of ClassificationPositiveClass.
func (s *CreateFineTuneRequest) GetClassificationPositiveClass() OptNilString {
	return s.ClassificationPositiveClass
}

// GetClassificationBetas returns the value of ClassificationBetas.
func (s *CreateFineTuneRequest) GetClassificationBetas() OptNilFloat64Array {
	return s.ClassificationBetas
}

// GetSuffix returns the value of Suffix.
func (s *CreateFineTuneRequest) GetSuffix() OptNilString {
	return s.Suffix
}

// SetTrainingFile sets the value of TrainingFile.
func (s *CreateFineTuneRequest) SetTrainingFile(val string) {
	s.TrainingFile = val
}

// SetValidationFile sets the value of ValidationFile.
func (s *CreateFineTuneRequest) SetValidationFile(val OptNilString) {
	s.ValidationFile = val
}

// SetModel sets the value of Model.
func (s *CreateFineTuneRequest) SetModel(val OptNilString) {
	s.Model = val
}

// SetNEpochs sets the value of NEpochs.
func (s *CreateFineTuneRequest) SetNEpochs(val OptNilInt) {
	s.NEpochs = val
}

// SetBatchSize sets the value of BatchSize.
func (s *CreateFineTuneRequest) SetBatchSize(val OptNilInt) {
	s.BatchSize = val
}

// SetLearningRateMultiplier sets the value of LearningRateMultiplier.
func (s *CreateFineTuneRequest) SetLearningRateMultiplier(val OptNilFloat64) {
	s.LearningRateMultiplier = val
}

// SetPromptLossWeight sets the value of PromptLossWeight.
func (s *CreateFineTuneRequest) SetPromptLossWeight(val OptNilFloat64) {
	s.PromptLossWeight = val
}

// SetComputeClassificationMetrics sets the value of ComputeClassificationMetrics.
func (s *CreateFineTuneRequest) SetComputeClassificationMetrics(val OptNilBool) {
	s.ComputeClassificationMetrics = val
}

// SetClassificationNClasses sets the value of ClassificationNClasses.
func (s *CreateFineTuneRequest) SetClassificationNClasses(val OptNilInt) {
	s.ClassificationNClasses = val
}

// SetClassificationPositiveClass sets the value of ClassificationPositiveClass.
func (s *CreateFineTuneRequest) SetClassificationPositiveClass(val OptNilString) {
	s.ClassificationPositiveClass = val
}

// SetClassificationBetas sets the value of ClassificationBetas.
func (s *CreateFineTuneRequest) SetClassificationBetas(val OptNilFloat64Array) {
	s.ClassificationBetas = val
}

// SetSuffix sets the value of Suffix.
func (s *CreateFineTuneRequest) SetSuffix(val OptNilString) {
	s.Suffix = val
}

// Ref: #/components/schemas/CreateImageEditRequest
type CreateImageEditRequest struct {
	// The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided,
	// image must have transparency, which will be used as the mask.
	Image string `json:"image"`
	// An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where
	// `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as
	// `image`.
	Mask OptString `json:"mask"`
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `json:"prompt"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageEditRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageEditRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageEditRequest) GetImage() string {
	return s.Image
}

// GetMask returns the value of Mask.
func (s *CreateImageEditRequest) GetMask() OptString {
	return s.Mask
}

// GetPrompt returns the value of Prompt.
func (s *CreateImageEditRequest) GetPrompt() string {
	return s.Prompt
}

// GetN returns the value of N.
func (s *CreateImageEditRequest) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageEditRequest) GetSize() OptNilCreateImageEditRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageEditRequest) GetResponseFormat() OptNilCreateImageEditRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageEditRequest) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageEditRequest) SetImage(val string) {
	s.Image = val
}

// SetMask sets the value of Mask.
func (s *CreateImageEditRequest) SetMask(val OptString) {
	s.Mask = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateImageEditRequest) SetPrompt(val string) {
	s.Prompt = val
}

// SetN sets the value of N.
func (s *CreateImageEditRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageEditRequest) SetSize(val OptNilCreateImageEditRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageEditRequest) SetResponseFormat(val OptNilCreateImageEditRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageEditRequest) SetUser(val OptString) {
	s.User = val
}

// Ref: #/components/schemas/CreateImageEditRequest
type CreateImageEditRequestForm struct {
	// The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided,
	// image must have transparency, which will be used as the mask.
	Image ht.MultipartFile `json:"image"`
	// An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where
	// `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as
	// `image`.
	Mask OptMultipartFile `json:"mask"`
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `json:"prompt"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageEditRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageEditRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageEditRequestForm) GetImage() ht.MultipartFile {
	return s.Image
}

// GetMask returns the value of Mask.
func (s *CreateImageEditRequestForm) GetMask() OptMultipartFile {
	return s.Mask
}

// GetPrompt returns the value of Prompt.
func (s *CreateImageEditRequestForm) GetPrompt() string {
	return s.Prompt
}

// GetN returns the value of N.
func (s *CreateImageEditRequestForm) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageEditRequestForm) GetSize() OptNilCreateImageEditRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageEditRequestForm) GetResponseFormat() OptNilCreateImageEditRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageEditRequestForm) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageEditRequestForm) SetImage(val ht.MultipartFile) {
	s.Image = val
}

// SetMask sets the value of Mask.
func (s *CreateImageEditRequestForm) SetMask(val OptMultipartFile) {
	s.Mask = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateImageEditRequestForm) SetPrompt(val string) {
	s.Prompt = val
}

// SetN sets the value of N.
func (s *CreateImageEditRequestForm) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageEditRequestForm) SetSize(val OptNilCreateImageEditRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageEditRequestForm) SetResponseFormat(val OptNilCreateImageEditRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageEditRequestForm) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageEditRequestResponseFormat string

const (
	CreateImageEditRequestResponseFormatURL     CreateImageEditRequestResponseFormat = "url"
	CreateImageEditRequestResponseFormatB64JSON CreateImageEditRequestResponseFormat = "b64_json"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageEditRequestResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageEditRequestResponseFormatURL:
		return []byte(s), nil
	case CreateImageEditRequestResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageEditRequestResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageEditRequestResponseFormat(data) {
	case CreateImageEditRequestResponseFormatURL:
		*s = CreateImageEditRequestResponseFormatURL
		return nil
	case CreateImageEditRequestResponseFormatB64JSON:
		*s = CreateImageEditRequestResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageEditRequestSize string

const (
	CreateImageEditRequestSize256x256   CreateImageEditRequestSize = "256x256"
	CreateImageEditRequestSize512x512   CreateImageEditRequestSize = "512x512"
	CreateImageEditRequestSize1024x1024 CreateImageEditRequestSize = "1024x1024"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageEditRequestSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageEditRequestSize256x256:
		return []byte(s), nil
	case CreateImageEditRequestSize512x512:
		return []byte(s), nil
	case CreateImageEditRequestSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageEditRequestSize) UnmarshalText(data []byte) error {
	switch CreateImageEditRequestSize(data) {
	case CreateImageEditRequestSize256x256:
		*s = CreateImageEditRequestSize256x256
		return nil
	case CreateImageEditRequestSize512x512:
		*s = CreateImageEditRequestSize512x512
		return nil
	case CreateImageEditRequestSize1024x1024:
		*s = CreateImageEditRequestSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateImageRequest
type CreateImageRequest struct {
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `json:"prompt"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetPrompt returns the value of Prompt.
func (s *CreateImageRequest) GetPrompt() string {
	return s.Prompt
}

// GetN returns the value of N.
func (s *CreateImageRequest) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageRequest) GetSize() OptNilCreateImageRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageRequest) GetResponseFormat() OptNilCreateImageRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageRequest) GetUser() OptString {
	return s.User
}

// SetPrompt sets the value of Prompt.
func (s *CreateImageRequest) SetPrompt(val string) {
	s.Prompt = val
}

// SetN sets the value of N.
func (s *CreateImageRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageRequest) SetSize(val OptNilCreateImageRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageRequest) SetResponseFormat(val OptNilCreateImageRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageRequest) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageRequestResponseFormat string

const (
	CreateImageRequestResponseFormatURL     CreateImageRequestResponseFormat = "url"
	CreateImageRequestResponseFormatB64JSON CreateImageRequestResponseFormat = "b64_json"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageRequestResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageRequestResponseFormatURL:
		return []byte(s), nil
	case CreateImageRequestResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageRequestResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageRequestResponseFormat(data) {
	case CreateImageRequestResponseFormatURL:
		*s = CreateImageRequestResponseFormatURL
		return nil
	case CreateImageRequestResponseFormatB64JSON:
		*s = CreateImageRequestResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageRequestSize string

const (
	CreateImageRequestSize256x256   CreateImageRequestSize = "256x256"
	CreateImageRequestSize512x512   CreateImageRequestSize = "512x512"
	CreateImageRequestSize1024x1024 CreateImageRequestSize = "1024x1024"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageRequestSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageRequestSize256x256:
		return []byte(s), nil
	case CreateImageRequestSize512x512:
		return []byte(s), nil
	case CreateImageRequestSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageRequestSize) UnmarshalText(data []byte) error {
	switch CreateImageRequestSize(data) {
	case CreateImageRequestSize256x256:
		*s = CreateImageRequestSize256x256
		return nil
	case CreateImageRequestSize512x512:
		*s = CreateImageRequestSize512x512
		return nil
	case CreateImageRequestSize1024x1024:
		*s = CreateImageRequestSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateImageVariationRequest
type CreateImageVariationRequest struct {
	// The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and
	// square.
	Image string `json:"image"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageVariationRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageVariationRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageVariationRequest) GetImage() string {
	return s.Image
}

// GetN returns the value of N.
func (s *CreateImageVariationRequest) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageVariationRequest) GetSize() OptNilCreateImageVariationRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageVariationRequest) GetResponseFormat() OptNilCreateImageVariationRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageVariationRequest) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageVariationRequest) SetImage(val string) {
	s.Image = val
}

// SetN sets the value of N.
func (s *CreateImageVariationRequest) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageVariationRequest) SetSize(val OptNilCreateImageVariationRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageVariationRequest) SetResponseFormat(val OptNilCreateImageVariationRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageVariationRequest) SetUser(val OptString) {
	s.User = val
}

// Ref: #/components/schemas/CreateImageVariationRequest
type CreateImageVariationRequestForm struct {
	// The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and
	// square.
	Image ht.MultipartFile `json:"image"`
	// The number of images to generate. Must be between 1 and 10.
	N OptNilInt `json:"n"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size OptNilCreateImageVariationRequestSize `json:"size"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat OptNilCreateImageVariationRequestResponseFormat `json:"response_format"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
	// [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	User OptString `json:"user"`
}

// GetImage returns the value of Image.
func (s *CreateImageVariationRequestForm) GetImage() ht.MultipartFile {
	return s.Image
}

// GetN returns the value of N.
func (s *CreateImageVariationRequestForm) GetN() OptNilInt {
	return s.N
}

// GetSize returns the value of Size.
func (s *CreateImageVariationRequestForm) GetSize() OptNilCreateImageVariationRequestSize {
	return s.Size
}

// GetResponseFormat returns the value of ResponseFormat.
func (s *CreateImageVariationRequestForm) GetResponseFormat() OptNilCreateImageVariationRequestResponseFormat {
	return s.ResponseFormat
}

// GetUser returns the value of User.
func (s *CreateImageVariationRequestForm) GetUser() OptString {
	return s.User
}

// SetImage sets the value of Image.
func (s *CreateImageVariationRequestForm) SetImage(val ht.MultipartFile) {
	s.Image = val
}

// SetN sets the value of N.
func (s *CreateImageVariationRequestForm) SetN(val OptNilInt) {
	s.N = val
}

// SetSize sets the value of Size.
func (s *CreateImageVariationRequestForm) SetSize(val OptNilCreateImageVariationRequestSize) {
	s.Size = val
}

// SetResponseFormat sets the value of ResponseFormat.
func (s *CreateImageVariationRequestForm) SetResponseFormat(val OptNilCreateImageVariationRequestResponseFormat) {
	s.ResponseFormat = val
}

// SetUser sets the value of User.
func (s *CreateImageVariationRequestForm) SetUser(val OptString) {
	s.User = val
}

// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
type CreateImageVariationRequestResponseFormat string

const (
	CreateImageVariationRequestResponseFormatURL     CreateImageVariationRequestResponseFormat = "url"
	CreateImageVariationRequestResponseFormatB64JSON CreateImageVariationRequestResponseFormat = "b64_json"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageVariationRequestResponseFormat) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageVariationRequestResponseFormatURL:
		return []byte(s), nil
	case CreateImageVariationRequestResponseFormatB64JSON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageVariationRequestResponseFormat) UnmarshalText(data []byte) error {
	switch CreateImageVariationRequestResponseFormat(data) {
	case CreateImageVariationRequestResponseFormatURL:
		*s = CreateImageVariationRequestResponseFormatURL
		return nil
	case CreateImageVariationRequestResponseFormatB64JSON:
		*s = CreateImageVariationRequestResponseFormatB64JSON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
type CreateImageVariationRequestSize string

const (
	CreateImageVariationRequestSize256x256   CreateImageVariationRequestSize = "256x256"
	CreateImageVariationRequestSize512x512   CreateImageVariationRequestSize = "512x512"
	CreateImageVariationRequestSize1024x1024 CreateImageVariationRequestSize = "1024x1024"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateImageVariationRequestSize) MarshalText() ([]byte, error) {
	switch s {
	case CreateImageVariationRequestSize256x256:
		return []byte(s), nil
	case CreateImageVariationRequestSize512x512:
		return []byte(s), nil
	case CreateImageVariationRequestSize1024x1024:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateImageVariationRequestSize) UnmarshalText(data []byte) error {
	switch CreateImageVariationRequestSize(data) {
	case CreateImageVariationRequestSize256x256:
		*s = CreateImageVariationRequestSize256x256
		return nil
	case CreateImageVariationRequestSize512x512:
		*s = CreateImageVariationRequestSize512x512
		return nil
	case CreateImageVariationRequestSize1024x1024:
		*s = CreateImageVariationRequestSize1024x1024
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateModerationRequest
type CreateModerationRequest struct {
	// The input text to classify.
	Input CreateModerationRequestInput `json:"input"`
	// Two content moderations models are available: `text-moderation-stable` and
	// `text-moderation-latest`.
	// The default is `text-moderation-latest` which will be automatically upgraded over time. This
	// ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will
	// provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be
	// slightly lower than for `text-moderation-latest`.
	Model OptString `json:"model"`
}

// GetInput returns the value of Input.
func (s *CreateModerationRequest) GetInput() CreateModerationRequestInput {
	return s.Input
}

// GetModel returns the value of Model.
func (s *CreateModerationRequest) GetModel() OptString {
	return s.Model
}

// SetInput sets the value of Input.
func (s *CreateModerationRequest) SetInput(val CreateModerationRequestInput) {
	s.Input = val
}

// SetModel sets the value of Model.
func (s *CreateModerationRequest) SetModel(val OptString) {
	s.Model = val
}

// The input text to classify.
// CreateModerationRequestInput represents sum type.
type CreateModerationRequestInput struct {
	Type        CreateModerationRequestInputType // switch on this field
	String      string
	StringArray []string
}

// CreateModerationRequestInputType is oneOf type of CreateModerationRequestInput.
type CreateModerationRequestInputType string

// Possible values for CreateModerationRequestInputType.
const (
	StringCreateModerationRequestInput      CreateModerationRequestInputType = "string"
	StringArrayCreateModerationRequestInput CreateModerationRequestInputType = "[]string"
)

// IsString reports whether CreateModerationRequestInput is string.
func (s CreateModerationRequestInput) IsString() bool {
	return s.Type == StringCreateModerationRequestInput
}

// IsStringArray reports whether CreateModerationRequestInput is []string.
func (s CreateModerationRequestInput) IsStringArray() bool {
	return s.Type == StringArrayCreateModerationRequestInput
}

// SetString sets CreateModerationRequestInput to string.
func (s *CreateModerationRequestInput) SetString(v string) {
	s.Type = StringCreateModerationRequestInput
	s.String = v
}

// GetString returns string and true boolean if CreateModerationRequestInput is string.
func (s CreateModerationRequestInput) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCreateModerationRequestInput returns new CreateModerationRequestInput from string.
func NewStringCreateModerationRequestInput(v string) CreateModerationRequestInput {
	var s CreateModerationRequestInput
	s.SetString(v)
	return s
}

// SetStringArray sets CreateModerationRequestInput to []string.
func (s *CreateModerationRequestInput) SetStringArray(v []string) {
	s.Type = StringArrayCreateModerationRequestInput
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if CreateModerationRequestInput is []string.
func (s CreateModerationRequestInput) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayCreateModerationRequestInput returns new CreateModerationRequestInput from []string.
func NewStringArrayCreateModerationRequestInput(v []string) CreateModerationRequestInput {
	var s CreateModerationRequestInput
	s.SetStringArray(v)
	return s
}

// Ref: #/components/schemas/CreateModerationResponse
type CreateModerationResponse struct {
	ID      string                                `json:"id"`
	Model   string                                `json:"model"`
	Results []CreateModerationResponseResultsItem `json:"results"`
}

// GetID returns the value of ID.
func (s *CreateModerationResponse) GetID() string {
	return s.ID
}

// GetModel returns the value of Model.
func (s *CreateModerationResponse) GetModel() string {
	return s.Model
}

// GetResults returns the value of Results.
func (s *CreateModerationResponse) GetResults() []CreateModerationResponseResultsItem {
	return s.Results
}

// SetID sets the value of ID.
func (s *CreateModerationResponse) SetID(val string) {
	s.ID = val
}

// SetModel sets the value of Model.
func (s *CreateModerationResponse) SetModel(val string) {
	s.Model = val
}

// SetResults sets the value of Results.
func (s *CreateModerationResponse) SetResults(val []CreateModerationResponseResultsItem) {
	s.Results = val
}

type CreateModerationResponseResultsItem struct {
	Flagged        bool                                              `json:"flagged"`
	Categories     CreateModerationResponseResultsItemCategories     `json:"categories"`
	CategoryScores CreateModerationResponseResultsItemCategoryScores `json:"category_scores"`
}

// GetFlagged returns the value of Flagged.
func (s *CreateModerationResponseResultsItem) GetFlagged() bool {
	return s.Flagged
}

// GetCategories returns the value of Categories.
func (s *CreateModerationResponseResultsItem) GetCategories() CreateModerationResponseResultsItemCategories {
	return s.Categories
}

// GetCategoryScores returns the value of CategoryScores.
func (s *CreateModerationResponseResultsItem) GetCategoryScores() CreateModerationResponseResultsItemCategoryScores {
	return s.CategoryScores
}

// SetFlagged sets the value of Flagged.
func (s *CreateModerationResponseResultsItem) SetFlagged(val bool) {
	s.Flagged = val
}

// SetCategories sets the value of Categories.
func (s *CreateModerationResponseResultsItem) SetCategories(val CreateModerationResponseResultsItemCategories) {
	s.Categories = val
}

// SetCategoryScores sets the value of CategoryScores.
func (s *CreateModerationResponseResultsItem) SetCategoryScores(val CreateModerationResponseResultsItemCategoryScores) {
	s.CategoryScores = val
}

type CreateModerationResponseResultsItemCategories struct {
	Hate                 bool `json:"hate"`
	HateSlashThreatening bool `json:"hate/threatening"`
	SelfMinusHarm        bool `json:"self-harm"`
	Sexual               bool `json:"sexual"`
	SexualSlashMinors    bool `json:"sexual/minors"`
	Violence             bool `json:"violence"`
	ViolenceSlashGraphic bool `json:"violence/graphic"`
}

// GetHate returns the value of Hate.
func (s *CreateModerationResponseResultsItemCategories) GetHate() bool {
	return s.Hate
}

// GetHateSlashThreatening returns the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategories) GetHateSlashThreatening() bool {
	return s.HateSlashThreatening
}

// GetSelfMinusHarm returns the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategories) GetSelfMinusHarm() bool {
	return s.SelfMinusHarm
}

// GetSexual returns the value of Sexual.
func (s *CreateModerationResponseResultsItemCategories) GetSexual() bool {
	return s.Sexual
}

// GetSexualSlashMinors returns the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategories) GetSexualSlashMinors() bool {
	return s.SexualSlashMinors
}

// GetViolence returns the value of Violence.
func (s *CreateModerationResponseResultsItemCategories) GetViolence() bool {
	return s.Violence
}

// GetViolenceSlashGraphic returns the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategories) GetViolenceSlashGraphic() bool {
	return s.ViolenceSlashGraphic
}

// SetHate sets the value of Hate.
func (s *CreateModerationResponseResultsItemCategories) SetHate(val bool) {
	s.Hate = val
}

// SetHateSlashThreatening sets the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategories) SetHateSlashThreatening(val bool) {
	s.HateSlashThreatening = val
}

// SetSelfMinusHarm sets the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategories) SetSelfMinusHarm(val bool) {
	s.SelfMinusHarm = val
}

// SetSexual sets the value of Sexual.
func (s *CreateModerationResponseResultsItemCategories) SetSexual(val bool) {
	s.Sexual = val
}

// SetSexualSlashMinors sets the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategories) SetSexualSlashMinors(val bool) {
	s.SexualSlashMinors = val
}

// SetViolence sets the value of Violence.
func (s *CreateModerationResponseResultsItemCategories) SetViolence(val bool) {
	s.Violence = val
}

// SetViolenceSlashGraphic sets the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategories) SetViolenceSlashGraphic(val bool) {
	s.ViolenceSlashGraphic = val
}

type CreateModerationResponseResultsItemCategoryScores struct {
	Hate                 float64 `json:"hate"`
	HateSlashThreatening float64 `json:"hate/threatening"`
	SelfMinusHarm        float64 `json:"self-harm"`
	Sexual               float64 `json:"sexual"`
	SexualSlashMinors    float64 `json:"sexual/minors"`
	Violence             float64 `json:"violence"`
	ViolenceSlashGraphic float64 `json:"violence/graphic"`
}

// GetHate returns the value of Hate.
func (s *CreateModerationResponseResultsItemCategoryScores) GetHate() float64 {
	return s.Hate
}

// GetHateSlashThreatening returns the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategoryScores) GetHateSlashThreatening() float64 {
	return s.HateSlashThreatening
}

// GetSelfMinusHarm returns the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSelfMinusHarm() float64 {
	return s.SelfMinusHarm
}

// GetSexual returns the value of Sexual.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSexual() float64 {
	return s.Sexual
}

// GetSexualSlashMinors returns the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategoryScores) GetSexualSlashMinors() float64 {
	return s.SexualSlashMinors
}

// GetViolence returns the value of Violence.
func (s *CreateModerationResponseResultsItemCategoryScores) GetViolence() float64 {
	return s.Violence
}

// GetViolenceSlashGraphic returns the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategoryScores) GetViolenceSlashGraphic() float64 {
	return s.ViolenceSlashGraphic
}

// SetHate sets the value of Hate.
func (s *CreateModerationResponseResultsItemCategoryScores) SetHate(val float64) {
	s.Hate = val
}

// SetHateSlashThreatening sets the value of HateSlashThreatening.
func (s *CreateModerationResponseResultsItemCategoryScores) SetHateSlashThreatening(val float64) {
	s.HateSlashThreatening = val
}

// SetSelfMinusHarm sets the value of SelfMinusHarm.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSelfMinusHarm(val float64) {
	s.SelfMinusHarm = val
}

// SetSexual sets the value of Sexual.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSexual(val float64) {
	s.Sexual = val
}

// SetSexualSlashMinors sets the value of SexualSlashMinors.
func (s *CreateModerationResponseResultsItemCategoryScores) SetSexualSlashMinors(val float64) {
	s.SexualSlashMinors = val
}

// SetViolence sets the value of Violence.
func (s *CreateModerationResponseResultsItemCategoryScores) SetViolence(val float64) {
	s.Violence = val
}

// SetViolenceSlashGraphic sets the value of ViolenceSlashGraphic.
func (s *CreateModerationResponseResultsItemCategoryScores) SetViolenceSlashGraphic(val float64) {
	s.ViolenceSlashGraphic = val
}

// Ref: #/components/schemas/DeleteFileResponse
type DeleteFileResponse struct {
	ID      string `json:"id"`
	Object  string `json:"object"`
	Deleted bool   `json:"deleted"`
}

// GetID returns the value of ID.
func (s *DeleteFileResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *DeleteFileResponse) GetObject() string {
	return s.Object
}

// GetDeleted returns the value of Deleted.
func (s *DeleteFileResponse) GetDeleted() bool {
	return s.Deleted
}

// SetID sets the value of ID.
func (s *DeleteFileResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *DeleteFileResponse) SetObject(val string) {
	s.Object = val
}

// SetDeleted sets the value of Deleted.
func (s *DeleteFileResponse) SetDeleted(val bool) {
	s.Deleted = val
}

// Ref: #/components/schemas/DeleteModelResponse
type DeleteModelResponse struct {
	ID      string `json:"id"`
	Object  string `json:"object"`
	Deleted bool   `json:"deleted"`
}

// GetID returns the value of ID.
func (s *DeleteModelResponse) GetID() string {
	return s.ID
}

// GetObject returns the value of Object.
func (s *DeleteModelResponse) GetObject() string {
	return s.Object
}

// GetDeleted returns the value of Deleted.
func (s *DeleteModelResponse) GetDeleted() bool {
	return s.Deleted
}

// SetID sets the value of ID.
func (s *DeleteModelResponse) SetID(val string) {
	s.ID = val
}

// SetObject sets the value of Object.
func (s *DeleteModelResponse) SetObject(val string) {
	s.Object = val
}

// SetDeleted sets the value of Deleted.
func (s *DeleteModelResponse) SetDeleted(val bool) {
	s.Deleted = val
}

type FineTune jx.Raw

type FineTuneEvent jx.Raw

type ImagesResponse jx.Raw

// Ref: #/components/schemas/ListFilesResponse
type ListFilesResponse struct {
	Object string       `json:"object"`
	Data   []OpenAIFile `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFilesResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFilesResponse) GetData() []OpenAIFile {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFilesResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFilesResponse) SetData(val []OpenAIFile) {
	s.Data = val
}

// Ref: #/components/schemas/ListFineTuneEventsResponse
type ListFineTuneEventsResponse struct {
	Object string          `json:"object"`
	Data   []FineTuneEvent `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFineTuneEventsResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFineTuneEventsResponse) GetData() []FineTuneEvent {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFineTuneEventsResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFineTuneEventsResponse) SetData(val []FineTuneEvent) {
	s.Data = val
}

// Ref: #/components/schemas/ListFineTunesResponse
type ListFineTunesResponse struct {
	Object string     `json:"object"`
	Data   []FineTune `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListFineTunesResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListFineTunesResponse) GetData() []FineTune {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListFineTunesResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListFineTunesResponse) SetData(val []FineTune) {
	s.Data = val
}

// Ref: #/components/schemas/ListModelsResponse
type ListModelsResponse struct {
	Object string  `json:"object"`
	Data   []Model `json:"data"`
}

// GetObject returns the value of Object.
func (s *ListModelsResponse) GetObject() string {
	return s.Object
}

// GetData returns the value of Data.
func (s *ListModelsResponse) GetData() []Model {
	return s.Data
}

// SetObject sets the value of Object.
func (s *ListModelsResponse) SetObject(val string) {
	s.Object = val
}

// SetData sets the value of Data.
func (s *ListModelsResponse) SetData(val []Model) {
	s.Data = val
}

type Model jx.Raw

type OpenAIFile jx.Raw

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChatCompletionResponseMessage returns new OptChatCompletionResponseMessage with value set to v.
func NewOptChatCompletionResponseMessage(v ChatCompletionResponseMessage) OptChatCompletionResponseMessage {
	return OptChatCompletionResponseMessage{
		Value: v,
		Set:   true,
	}
}

// OptChatCompletionResponseMessage is optional ChatCompletionResponseMessage.
type OptChatCompletionResponseMessage struct {
	Value ChatCompletionResponseMessage
	Set   bool
}

// IsSet returns true if OptChatCompletionResponseMessage was set.
func (o OptChatCompletionResponseMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatCompletionResponseMessage) Reset() {
	var v ChatCompletionResponseMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatCompletionResponseMessage) SetTo(v ChatCompletionResponseMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatCompletionResponseMessage) Get() (v ChatCompletionResponseMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChatCompletionResponseMessage) Or(d ChatCompletionResponseMessage) ChatCompletionResponseMessage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateChatCompletionRequestLogitBias returns new OptCreateChatCompletionRequestLogitBias with value set to v.
func NewOptCreateChatCompletionRequestLogitBias(v *CreateChatCompletionRequestLogitBias) OptCreateChatCompletionRequestLogitBias {
	return OptCreateChatCompletionRequestLogitBias{
		Value: v,
		Set:   true,
	}
}

// OptCreateChatCompletionRequestLogitBias is optional *CreateChatCompletionRequestLogitBias.
type OptCreateChatCompletionRequestLogitBias struct {
	Value *CreateChatCompletionRequestLogitBias
	Set   bool
}

// IsSet returns true if OptCreateChatCompletionRequestLogitBias was set.
func (o OptCreateChatCompletionRequestLogitBias) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateChatCompletionRequestLogitBias) Reset() {
	var v *CreateChatCompletionRequestLogitBias
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateChatCompletionRequestLogitBias) SetTo(v *CreateChatCompletionRequestLogitBias) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateChatCompletionRequestLogitBias) Get() (v *CreateChatCompletionRequestLogitBias, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateChatCompletionRequestLogitBias) Or(d *CreateChatCompletionRequestLogitBias) *CreateChatCompletionRequestLogitBias {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateChatCompletionRequestStop returns new OptCreateChatCompletionRequestStop with value set to v.
func NewOptCreateChatCompletionRequestStop(v CreateChatCompletionRequestStop) OptCreateChatCompletionRequestStop {
	return OptCreateChatCompletionRequestStop{
		Value: v,
		Set:   true,
	}
}

// OptCreateChatCompletionRequestStop is optional CreateChatCompletionRequestStop.
type OptCreateChatCompletionRequestStop struct {
	Value CreateChatCompletionRequestStop
	Set   bool
}

// IsSet returns true if OptCreateChatCompletionRequestStop was set.
func (o OptCreateChatCompletionRequestStop) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateChatCompletionRequestStop) Reset() {
	var v CreateChatCompletionRequestStop
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateChatCompletionRequestStop) SetTo(v CreateChatCompletionRequestStop) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateChatCompletionRequestStop) Get() (v CreateChatCompletionRequestStop, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateChatCompletionRequestStop) Or(d CreateChatCompletionRequestStop) CreateChatCompletionRequestStop {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateChatCompletionResponseUsage returns new OptCreateChatCompletionResponseUsage with value set to v.
func NewOptCreateChatCompletionResponseUsage(v CreateChatCompletionResponseUsage) OptCreateChatCompletionResponseUsage {
	return OptCreateChatCompletionResponseUsage{
		Value: v,
		Set:   true,
	}
}

// OptCreateChatCompletionResponseUsage is optional CreateChatCompletionResponseUsage.
type OptCreateChatCompletionResponseUsage struct {
	Value CreateChatCompletionResponseUsage
	Set   bool
}

// IsSet returns true if OptCreateChatCompletionResponseUsage was set.
func (o OptCreateChatCompletionResponseUsage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateChatCompletionResponseUsage) Reset() {
	var v CreateChatCompletionResponseUsage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateChatCompletionResponseUsage) SetTo(v CreateChatCompletionResponseUsage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateChatCompletionResponseUsage) Get() (v CreateChatCompletionResponseUsage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateChatCompletionResponseUsage) Or(d CreateChatCompletionResponseUsage) CreateChatCompletionResponseUsage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateEditResponseChoicesItemLogprobs returns new OptNilCreateEditResponseChoicesItemLogprobs with value set to v.
func NewOptNilCreateEditResponseChoicesItemLogprobs(v CreateEditResponseChoicesItemLogprobs) OptNilCreateEditResponseChoicesItemLogprobs {
	return OptNilCreateEditResponseChoicesItemLogprobs{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateEditResponseChoicesItemLogprobs is optional nullable CreateEditResponseChoicesItemLogprobs.
type OptNilCreateEditResponseChoicesItemLogprobs struct {
	Value CreateEditResponseChoicesItemLogprobs
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateEditResponseChoicesItemLogprobs was set.
func (o OptNilCreateEditResponseChoicesItemLogprobs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) Reset() {
	var v CreateEditResponseChoicesItemLogprobs
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) SetTo(v CreateEditResponseChoicesItemLogprobs) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateEditResponseChoicesItemLogprobs) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateEditResponseChoicesItemLogprobs) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateEditResponseChoicesItemLogprobs
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateEditResponseChoicesItemLogprobs) Get() (v CreateEditResponseChoicesItemLogprobs, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateEditResponseChoicesItemLogprobs) Or(d CreateEditResponseChoicesItemLogprobs) CreateEditResponseChoicesItemLogprobs {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageEditRequestResponseFormat returns new OptNilCreateImageEditRequestResponseFormat with value set to v.
func NewOptNilCreateImageEditRequestResponseFormat(v CreateImageEditRequestResponseFormat) OptNilCreateImageEditRequestResponseFormat {
	return OptNilCreateImageEditRequestResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageEditRequestResponseFormat is optional nullable CreateImageEditRequestResponseFormat.
type OptNilCreateImageEditRequestResponseFormat struct {
	Value CreateImageEditRequestResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageEditRequestResponseFormat was set.
func (o OptNilCreateImageEditRequestResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageEditRequestResponseFormat) Reset() {
	var v CreateImageEditRequestResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageEditRequestResponseFormat) SetTo(v CreateImageEditRequestResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageEditRequestResponseFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageEditRequestResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageEditRequestResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageEditRequestResponseFormat) Get() (v CreateImageEditRequestResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageEditRequestResponseFormat) Or(d CreateImageEditRequestResponseFormat) CreateImageEditRequestResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageEditRequestSize returns new OptNilCreateImageEditRequestSize with value set to v.
func NewOptNilCreateImageEditRequestSize(v CreateImageEditRequestSize) OptNilCreateImageEditRequestSize {
	return OptNilCreateImageEditRequestSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageEditRequestSize is optional nullable CreateImageEditRequestSize.
type OptNilCreateImageEditRequestSize struct {
	Value CreateImageEditRequestSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageEditRequestSize was set.
func (o OptNilCreateImageEditRequestSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageEditRequestSize) Reset() {
	var v CreateImageEditRequestSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageEditRequestSize) SetTo(v CreateImageEditRequestSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageEditRequestSize) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageEditRequestSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageEditRequestSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageEditRequestSize) Get() (v CreateImageEditRequestSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageEditRequestSize) Or(d CreateImageEditRequestSize) CreateImageEditRequestSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageRequestResponseFormat returns new OptNilCreateImageRequestResponseFormat with value set to v.
func NewOptNilCreateImageRequestResponseFormat(v CreateImageRequestResponseFormat) OptNilCreateImageRequestResponseFormat {
	return OptNilCreateImageRequestResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageRequestResponseFormat is optional nullable CreateImageRequestResponseFormat.
type OptNilCreateImageRequestResponseFormat struct {
	Value CreateImageRequestResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageRequestResponseFormat was set.
func (o OptNilCreateImageRequestResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageRequestResponseFormat) Reset() {
	var v CreateImageRequestResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageRequestResponseFormat) SetTo(v CreateImageRequestResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageRequestResponseFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageRequestResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageRequestResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageRequestResponseFormat) Get() (v CreateImageRequestResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageRequestResponseFormat) Or(d CreateImageRequestResponseFormat) CreateImageRequestResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageRequestSize returns new OptNilCreateImageRequestSize with value set to v.
func NewOptNilCreateImageRequestSize(v CreateImageRequestSize) OptNilCreateImageRequestSize {
	return OptNilCreateImageRequestSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageRequestSize is optional nullable CreateImageRequestSize.
type OptNilCreateImageRequestSize struct {
	Value CreateImageRequestSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageRequestSize was set.
func (o OptNilCreateImageRequestSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageRequestSize) Reset() {
	var v CreateImageRequestSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageRequestSize) SetTo(v CreateImageRequestSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageRequestSize) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageRequestSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageRequestSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageRequestSize) Get() (v CreateImageRequestSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageRequestSize) Or(d CreateImageRequestSize) CreateImageRequestSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageVariationRequestResponseFormat returns new OptNilCreateImageVariationRequestResponseFormat with value set to v.
func NewOptNilCreateImageVariationRequestResponseFormat(v CreateImageVariationRequestResponseFormat) OptNilCreateImageVariationRequestResponseFormat {
	return OptNilCreateImageVariationRequestResponseFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageVariationRequestResponseFormat is optional nullable CreateImageVariationRequestResponseFormat.
type OptNilCreateImageVariationRequestResponseFormat struct {
	Value CreateImageVariationRequestResponseFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageVariationRequestResponseFormat was set.
func (o OptNilCreateImageVariationRequestResponseFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageVariationRequestResponseFormat) Reset() {
	var v CreateImageVariationRequestResponseFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageVariationRequestResponseFormat) SetTo(v CreateImageVariationRequestResponseFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageVariationRequestResponseFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageVariationRequestResponseFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageVariationRequestResponseFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageVariationRequestResponseFormat) Get() (v CreateImageVariationRequestResponseFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageVariationRequestResponseFormat) Or(d CreateImageVariationRequestResponseFormat) CreateImageVariationRequestResponseFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateImageVariationRequestSize returns new OptNilCreateImageVariationRequestSize with value set to v.
func NewOptNilCreateImageVariationRequestSize(v CreateImageVariationRequestSize) OptNilCreateImageVariationRequestSize {
	return OptNilCreateImageVariationRequestSize{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateImageVariationRequestSize is optional nullable CreateImageVariationRequestSize.
type OptNilCreateImageVariationRequestSize struct {
	Value CreateImageVariationRequestSize
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateImageVariationRequestSize was set.
func (o OptNilCreateImageVariationRequestSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateImageVariationRequestSize) Reset() {
	var v CreateImageVariationRequestSize
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateImageVariationRequestSize) SetTo(v CreateImageVariationRequestSize) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCreateImageVariationRequestSize) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCreateImageVariationRequestSize) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateImageVariationRequestSize
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateImageVariationRequestSize) Get() (v CreateImageVariationRequestSize, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateImageVariationRequestSize) Or(d CreateImageVariationRequestSize) CreateImageVariationRequestSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64Array returns new OptNilFloat64Array with value set to v.
func NewOptNilFloat64Array(v []float64) OptNilFloat64Array {
	return OptNilFloat64Array{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64Array is optional nullable []float64.
type OptNilFloat64Array struct {
	Value []float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64Array was set.
func (o OptNilFloat64Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64Array) Reset() {
	var v []float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64Array) SetTo(v []float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64Array) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64Array) Get() (v []float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64Array) Or(d []float64) []float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
